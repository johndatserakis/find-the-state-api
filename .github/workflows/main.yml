name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Amazon ECR "Login" Action for GitHub Actions
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: find-the-state-api
        IMAGE_TAG: ${{ github.sha }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      run: |
        docker build \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          -f ./app/Dockerfile-production ./app \
          --build-arg POSTGRES_USER=$POSTGRES_USER \
          --build-arg POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
          --build-arg POSTGRES_HOST=$POSTGRES_HOST \
          --build-arg POSTGRES_DB=$POSTGRES_DB
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker build \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          -f ./app/Dockerfile-production ./app \
          --build-arg POSTGRES_USER=$POSTGRES_USER \
          --build-arg POSTGRES_PASSWORD=$POSTGRES_PASSWORD \
          --build-arg POSTGRES_HOST=$POSTGRES_HOST \
          --build-arg POSTGRES_DB=$POSTGRES_DB
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
